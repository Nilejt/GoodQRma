@model IEnumerable<GoodQRma.Models.Event>

@{
    ViewBag.Title = "Index";
}

<h2>Here's where to find GoodQRma!</h2>
<!--<!DOCTYPE html>
<html>
<head>
    <title>Find GoodQRma</title>
    <script src="http://maps.googleapis.com/maps/api/js"></script>
    <script>

    var myCenter = new google.maps.LatLng(42.3358794, -83.0497453);
        var marker;
        function initialize() {
            var mapProp = {
                center: myCenter,
                zoom: 15,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);

            var marker = new google.maps.Marker({
                position: myCenter,
                animation: google.maps.Animation.BOUNCE
            });
            marker.setMap(map);
        }
        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
</head>
<body>
    <div id="googleMap" style="width:1050px;height:300px;"></div>
</body>
</html>-->

<!DOCTYPE html>
<p id="demo">Click the button to get your position.</p>

<button onclick="getLocation()">Try It</button>

<div id="mapholder"></div>
<html>
<head>
    <title>Find GoodQRma</title>
</head>
    <body>
        

        <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

        <script>
            var x = document.getElementById("demo");
            function getLocation() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(showPosition, showError);
                } else {
                    x.innerHTML = "Geolocation is not supported by this browser.";
                }
            }

            function showPosition(position) {
                lat = position.coords.latitude;
                lon = position.coords.longitude;
                latlon = new google.maps.LatLng(lat, lon)
                mapholder = document.getElementById('mapholder')
                mapholder.style.height = '250px';
                mapholder.style.width = '500px';

                var myOptions = {
                    center: latlon, zoom: 14,
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    mapTypeControl: false,
                    navigationControlOptions: { style: google.maps.NavigationControlStyle.SMALL }
                }

                var map = new google.maps.Map(document.getElementById("mapholder"), myOptions);
                var marker = new google.maps.Marker({ position: latlon, map: map, title: "You are here!" });
            }

            function showError(error) {
                switch (error.code) {
                    case error.PERMISSION_DENIED:
                        x.innerHTML = "User denied the request for Geolocation."
                        break;
                    case error.POSITION_UNAVAILABLE:
                        x.innerHTML = "Location information is unavailable."
                        break;
                    case error.TIMEOUT:
                        x.innerHTML = "The request to get user location timed out."
                        break;
                    case error.UNKNOWN_ERROR:
                        x.innerHTML = "An unknown error occurred."
                        break;
                }
                var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);

                var marker = new google.maps.Marker({
                    position: myCenter,
                    animation: google.maps.Animation.BOUNCE
                });
                marker.setMap(map);
            }
            google.maps.event.addDomListener(window, 'load', initialize);
        </script>

        <div id="myOptions"></div>
    </body>
    </html>



<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.userID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.image)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.eventType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.eventDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.eventTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.numVolunteersNeeded)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.address1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.address2)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.city)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.state)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.zipCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.country)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.contact)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.gpsLong)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.gpsLat)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.eventURL)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.userID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.image)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.eventType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.eventDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.eventTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.numVolunteersNeeded)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.address1)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.address2)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.city)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.state)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.zipCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.country)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.contact)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.phone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.gpsLong)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.gpsLat)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.eventURL)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.eventID }) |
            @Html.ActionLink("Details", "Details", new { id=item.eventID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.eventID })
        </td>
    </tr>
}

</table>
