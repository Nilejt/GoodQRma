@model GoodQRma.Models.Event
@{
    ViewBag.Title = "Details";
}
<!--42.3358794, -83.0497453 Model.gpsLat, Model.gpsLong-->

<!DOCTYPE html>
<html>
<head>
    <title>Find GoodQRma</title>
    <script src="http://maps.googleapis.com/maps/api/js"></script>
    <script>

        var myCenter = new google.maps.LatLng(@Model.gpsLat, @Model.gpsLong);
        var marker;
        function initialize() {
            var mapProp = {
                center: myCenter,
                zoom: 15,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);

            var marker = new google.maps.Marker({
                position: myCenter,
                animation: google.maps.Animation.BOUNCE
            });
            marker.setMap(map);
        }
        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
</head>
<body>
    <div id="googleMap" style="width:1050px;height:300px;"></div>
</body>
</html>


<div>
    <h4>@Html.DisplayFor(model => model.name)</h4>
    <hr />
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.eventType)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.eventType)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.eventDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.eventDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.eventTime)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.eventTime)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.numVolunteersNeeded)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.numVolunteersNeeded)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.address1)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.address1)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.address2)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.address2)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.city)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.city)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.state)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.state)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.zipCode)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.zipCode)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.country)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.country)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.contact)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.contact)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.phone)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.phone)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.gpsLong)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.gpsLong)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.gpsLat)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.gpsLat)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.eventURL)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.eventURL)
        </dd>
    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.eventID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
